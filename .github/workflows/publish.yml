# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish

on: [ workflow_dispatch ]

env:
  BUILD_CONFIGURATION: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Get Tags
        id: get_latest_release
        uses: octokit/request-action@v2.x
        with:
          mediaType: 'application/json'
          route: GET /repos/${{ github.repository }}/git/matching-refs/tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store Response
        run: |
          tags=$(tr -d '\n\t\r ' <<<$(echo ${{ toJSON(steps.get_latest_release.outputs.data) }} | sed -e 's/\\n//g'))
          echo "AllTags=${tags}" >> $GITHUB_ENV

      - name: Checkout Git
        uses: actions/checkout@v4

      - name: Build & Test
        uses: D4nyi/FastEnum.Extensions.Generator/.github/actions/build-n-test@e4b511da7efba78277d32eab02670adfb590c3d0
        with:
          configuration: ${{ env.BUILD_CONFIGURATION }}

      - name: Pack
        run: dotnet pack ./src/FastEnum.Extensions.Generator/FastEnum.Extensions.Generator.csproj -c Release --no-build --no-restore --nologo -o output /p:PackageVersion=${{ env.version }}

      - name: Git Tag
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const version = process.env.version;
              const allTags = JSON.parse(process.env.AllTags).map(x => x.ref);

              console.log(version);
              console.log(allTags);

              const ref = `refs/tags/v${version}`;
              const tag = allTags.find(t => t === ref);

              console.log("Tag:", ref);

              if (tag) {
                throw new Error(`Tag already exists: ${tag}`);
              }

              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: ref,
                sha: context.sha
              });
            } catch (e) {
              console.error(e);
            }

      - name: Push to NuGet
        run: dotnet nuget push output/FastEnum.Extensions.Generator*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
