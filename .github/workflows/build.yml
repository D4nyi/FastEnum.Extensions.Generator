# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build & Test

on:
  push:
    branches:
      - main
      - 'feature/**'
    paths-ignore:
      - 'examples/**'
      - 'benchmarks/**'
      - 'test/FastEnum.Extensions.Generator.Tests.Snapshot/Snapshots/**'
      - '**/*.ps1'
      - .editorconfig
      - .gitattributes
      - .gitignore
      - coverlet.runsettings
      - LICENSE
      - README
  pull_request:
    branches:
      - main
      - 'feature/**'
    paths-ignore:
      - 'examples/**'
      - 'benchmarks/**'
      - 'test/FastEnum.Extensions.Generator.Tests.Snapshot/Snapshots/**'
      - '**/*.ps1'
      - .editorconfig
      - .gitattributes
      - .gitignore
      - coverlet.runsettings
      - LICENSE
      - README

env:
  BUILD_CONFIGURATION: Debug

jobs:
  build:
    name: Build (${{ matrix.dotnet-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ 8.0.x, 9.0.x ]
    steps:
      - name: Checkout Git
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          dotnet-quality: ga
      - name: Set DotNet Version
        run: |
          frameworkVersion=`echo 'net${{ matrix.dotnet-version }}' | cut -c1-6`
          echo "Framework Version: ${frameworkVersion}"
          echo "FrameworkVersion=${frameworkVersion}" >> $GITHUB_ENV
      - name: Restore
        run: dotnet restore ./FastEnumExtensions.sln

      - name: Build Generator
        run: dotnet build ./src/FastEnum.Extensions.Generator/FastEnum.Extensions.Generator.csproj --no-restore --nologo -c ${{ env.BUILD_CONFIGURATION }} -f netstandard2.0
      - name: Build Integration Tests
        run: dotnet build ./test/FastEnum.Extensions.Generator.Tests.Integration/FastEnum.Extensions.Generator.Tests.Integration.csproj --no-restore --nologo -c ${{ env.BUILD_CONFIGURATION }} -f ${{ env.FrameworkVersion }}
      - name: Build Snapshot Tests
        run: dotnet build ./test/FastEnum.Extensions.Generator.Tests.Snapshot/FastEnum.Extensions.Generator.Tests.Snapshot.csproj --no-restore --nologo -c ${{ env.BUILD_CONFIGURATION }} -f ${{ env.FrameworkVersion }}

      - name: Integration Tests
        run: dotnet test ./test/FastEnum.Extensions.Generator.Tests.Integration/FastEnum.Extensions.Generator.Tests.Integration.csproj --no-build --no-restore --nologo -c ${{ env.BUILD_CONFIGURATION }} -f ${{ env.FrameworkVersion }}
      - name: Snapshot Tests
        run: dotnet test ./test/FastEnum.Extensions.Generator.Tests.Snapshot/FastEnum.Extensions.Generator.Tests.Snapshot.csproj --no-build --no-restore --nologo -c ${{ env.BUILD_CONFIGURATION }} -f ${{ env.FrameworkVersion }}

  analyze:
    name: Analyze (${{ matrix.language }})
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - language: actions
            build-mode: none
          - language: csharp
            build-mode: manual
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
      - name: Manual Build
        if: matrix.build-mode == 'manual'
        shell: bash
        run: dotnet build ./FastEnumExtensions.sln --nologo -c ${{ env.BUILD_CONFIGURATION }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
